name: Django CI/CD Pipeline

on:
  push:
    branches: [feature/course_9, Develop]
  pull_request:
    branches: [Develop]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install flake8
        run: |
          poetry install --no-root
          poetry add flake8 --group dev

      - name: Run Flake8
        run: poetry run flake8
  test:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install Poetry
        run: |
            curl -sSL https://install.python-poetry.org | python3 -

      - name: Install dependencies
        run: |
          poetry install --no-root
  #        --only main --no-interaction --no-ansi --no-root

      - name: Run tests
        env:
          SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY_HABIT }}
        run: | 
          poetry run python manage.py test

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }} .

      - name: Push Docker image to Docker Hub
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/myapp:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Copy files to server
        run: |
          scp -o StrictHostKeyChecking=no \
            Dockerfile \
            docker-compose.yml \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_DIR_HABIT }}/
          
          # Копируем папку nginx с конфигами
          scp -o StrictHostKeyChecking=no -r \
            nginx/ \
            ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }}:${{ secrets.DEPLOY_DIR_HABIT }}/

      - name: Deploy to Server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
            cd ${{ secrets.DEPLOY_DIR_HABIT }}
          
            echo '${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}' | docker login -u '${{ secrets.DOCKER_HUB_USERNAME }}' --password-stdin
          
            docker-compose down
            docker system prune -af
            docker-compose up -d --build
            docker-compose exec web python manage.py migrate --noinput
            docker-compose exec web python manage.py collectstatic --noinput
          EOF